---
# tasks file for ara
- name: install required packages
  package:
    name: "{{ item }}"
  with_items:
    - "{{ ara_packages[ansible_distribution ~ '-' ~ ansible_distribution_major_version]
      | default(ara_packages[ansible_distribution]
      | default(ara_packages['default'] )) }}"
  become: true

- name: install ara
  pip:
    name: ara
  register: install_ara
  until: install_ara is succeeded
  retries: 3

- name: register ara to a sysvinit system
  template:
    src: ara.j2
    dest: "/etc/init.d/ara"
    mode: 0750
  when:
    - ansible_service_mgr == "sysvinit" or ansible_service_mgr == "upstart"
  become: true

- name: register ara to a systemd system
  template:
    src: ara.service.j2
    dest: /etc/systemd/system/ara.service
  when:
    - ansible_service_mgr == "systemd"
  notify:
    - systemctl daemon-reload
  become: true

- name: find callback_plugins path
  command: python -m ara.setup.callback_plugins
  changed_when: false
  register: ara_callback_plugins

- name: configure ansible to use ara
  ini_file:
    path: "{{ ara_configuration_file }}"
    section: defaults
    option: callback_plugins
    value: "{{ ara_callback_plugins.stdout }}"
  notify:
    - restart ara
  when:
    - ara_configuration_file is defined
    - ara_callback_plugins.stdout is defined

- name: configure ara
  ini_file:
    path: "{{ ara_configuration_file }}"
    section: ara
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  notify:
    - restart ara
  with_items:
    - "{{ ara_configuration }}"
  when:
    - ara_configuration is defined

- name: start and enable ara
  service:
    name: ara
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker"
  become: true
